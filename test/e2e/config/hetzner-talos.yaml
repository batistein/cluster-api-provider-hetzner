---
# CI E2E test test configuration scenario using locally build images and manifests for:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - hetzner

# For creating local dev images run make e2e-image from the main CAPH repository
images:
  - name: quay.io/syself/cluster-api-provider-hetzner:e2e
    loadBehavior: mustLoad
providers:
  - name: cluster-api
    type: CoreProvider
    versions:
      - name: v1.2.0-beta.1 # latest published release in the v1beta1 series; this is used for v1beta1
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.2.0-beta.1/core-components.yaml"
        type: "url"
        contract: v1beta1
        files:
          - sourcePath: "../data/shared/v1beta1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: talos
    type: BootstrapProvider
    versions:
      - name: v0.5.3 # latest published release in the v1beta1 series; this is used for v1beta1
        value: "https://github.com/siderolabs/cluster-api-bootstrap-provider-talos/releases/download/v0.5.3/bootstrap-components.yaml"
        type: "url"
        contract: "v1beta1"
        files:
          - sourcePath: "../data/shared/v1beta1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: talos
    type: ControlPlaneProvider
    versions:
      - name: v0.4.6 # latest published release in the v1beta1 series; this is used for v1beta1
        value: "https://github.com/siderolabs/cluster-api-control-plane-provider-talos/releases/download/v0.4.6/control-plane-components.yaml"
        type: "url"
        files:
          - sourcePath: "../data/shared/v1beta1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: hetzner
    type: InfrastructureProvider
    versions:
      - name: v1.0.99 # next; use manifest from source files
        value: ../../../config/default
        contract: v1beta1
        replacements:
          - old: quay.io/syself/cluster-api-provider-hetzner:latest
            new: quay.io/syself/cluster-api-provider-hetzner:e2e
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: --metrics-bind-addr=localhost:8080
            new: --metrics-bind-addr=:8080
        files:
          - sourcePath: "../../../metadata.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-talos.yaml"
variables:
  # Upgrade Test
  KUBERNETES_VERSION_MANAGEMENT: "v1.23.6"
  KUBERNETES_VERSION: "${KUBERNETES_VERSION:-v1.23.6}"
  KUBERNETES_VERSION_UPGRADE_FROM: "v1.23.0"
  KUBERNETES_VERSION_UPGRADE_TO: "v1.23.6"
  CONTROL_PLANE_MACHINE_TEMPLATE_UPGRADE_TO: "k8s-upgrade-control-plane"
  WORKERS_MACHINE_TEMPLATE_UPGRADE_TO: "k8s-upgrade-worker"
  KUBERNETES_IMAGE_UPGRADE_FROM: ${KUBERNETES_IMAGE_UPGRADE_FROM:-}
  KUBERNETES_IMAGE_UPGRADE_TO: ${KUBERNETES_IMAGE_UPGRADE_TO:-}
  ETCD_VERSION_UPGRADE_TO: "3.5.3-0"
  COREDNS_VERSION_UPGRADE_TO: "v1.8.6"
  IP_FAMILY: "IPv4"

  # NOTE: INIT_WITH_BINARY and INIT_WITH_KUBERNETES_VERSION are only used by the clusterctl upgrade test to initialize
  # the management cluster to be upgraded.
  INIT_WITH_BINARY: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.1.4/clusterctl-linux-amd64"
  INIT_WITH_PROVIDERS_CONTRACT: "v1beta1"
  INIT_WITH_KUBERNETES_VERSION: "v1.23.6"
  INIT_WITH_INFRASTRUCTURE_PROVIDER_VERSION: ${CAPH_LATEST_VERSION:-}

  # Cluster Addons
  CNI: "./data/cni/cilium/cilium.yaml"
  CCM: "./data/ccm/hcloud-ccm.yaml"
  CCM_NETWORK: "./data/ccm/hcloud-ccm-network.yaml"
  BIN_PATH: "${BIN_PATH}"

  # Conformance testing variables
  CONFORMANCE_WORKER_MACHINE_COUNT: 3
  CONFORMANCE_CONTROL_PLANE_MACHINE_COUNT: 3
  KUBETEST_CONFIGURATION: "${KUBETEST_CONF_PATH:=./data/kubetest/conformance.yaml}"
  NODE_DRAIN_TIMEOUT: "60s"

  # Enabling the feature flags by setting the env variables.
  EXP_CLUSTER_RESOURCE_SET: "true"
  CLUSTER_TOPOLOGY: "true"

  # Hetzner Provider Variables
  HCLOUD_TOKEN: "admin123"
  HCLOUD_SSH_KEY: "test"
  HCLOUD_REGION: "nbg1"
  HCLOUD_IMAGE_NAME: ${HCLOUD_IMAGE_NAME:-fedora-35}
  HCLOUD_CONTROL_PLANE_MACHINE_TYPE: cpx31
  HCLOUD_WORKER_MACHINE_TYPE: cpx21
  REDACT_LOG_SCRIPT: "../../hack/log/redact.sh"

intervals:
  default/wait-cluster: ["15m", "10s"]
  default/wait-control-plane: ["30m", "10s"]
  default/wait-worker-nodes: ["15m", "10s"]
  default/wait-controllers: ["5m", "10s"]
  default/wait-delete-cluster: ["20m", "10s"]
  default/wait-machine-upgrade: ["20m", "10s"]
  default/wait-machine-status: ["20m", "10s"]
  default/wait-failed-machine-status: ["2m", "10s"]
  default/wait-machine-remediation: ["15m", "10s"]
  default/wait-deployment: ["5m", "10s"]
  default/wait-job: ["5m", "10s"]
  default/wait-nodes-ready: ["15m", "10s"]
  default/wait-service: ["3m", "10s"]
  node-drain/wait-deployment-available: ["3m", "10s"]
  node-drain/wait-machine-deleted: ["15m", "10s"]
