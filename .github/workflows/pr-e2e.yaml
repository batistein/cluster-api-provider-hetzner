name: E2E Tests
on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
    branches:
      - main
      - "releases/**"
    paths:
      - "**.go"
      - "**go.mod"
      - "**go.sum"
      - "<templates|test>/**/*.<yml|yaml>"
env:
  hcloudctl_version: 1.29.4
  IMAGE_NAME: cluster-api-provider-hetzner
  REGISTRY: quay.io/syself
  metadata_flavor: latest=false
  metadata_tags: type=ref,event=pr

jobs:
  manager-image:
    name: Build and push manager image
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/setup-go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate metadata
        id: meta
        uses: ./.github/actions/metadata
        with:
          quay_username: ${{ secrets.QUAY_USERNAME }}
          metadata_flavor: ${{ env.metadata_flavor }}
          metadata_tags: ${{ env.metadata_tags }}

      - name: Log into quay.io
        uses: docker/login-action@v1
        env:
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
        if: ${{ env.QUAY_USERNAME != '' }}
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push manager image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, mode=max, scope=${{ github.workflow }}

  test-release:
    name: Test Release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/setup-go
      - uses: actions/cache@v3
        with:
          path: hack/tools/bin
          key: ${{ runner.os }}-tools-bin-release-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-tools-bin-release-
            ${{ runner.os }}-tools-bin-

      - name: Generate metadata
        id: meta
        uses: ./.github/actions/metadata
        with:
          quay_username: ${{ secrets.QUAY_USERNAME }}
          metadata_flavor: ${{ env.metadata_flavor }}
          metadata_tags: ${{ env.metadata_tags }}

      - name: Test Release
        env:
          TAG: ${{ steps.meta.outputs.version }}
        run: make test-release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-release
          path: out

  e2e-basic:
    name: "E2E Basic"
    concurrency: ci-${{ github.ref }}-e2e-basic
    runs-on: ubuntu-latest
    needs:
      - manager-image
      - test-release
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/setup-go
      - uses: actions/cache@v3
        with:
          path: hack/tools/bin
          key: ${{ runner.os }}-tools-bin-e2e-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-tools-bin-e2e-
            ${{ runner.os }}-tools-bin-
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: test-release
          path: out
      - name: Install hcloud
        run: curl -fsSL https://github.com/hetznercloud/cli/releases/download/v${{ env.hcloudctl_version }}/hcloud-linux-amd64.tar.gz | tar -xzv hcloud ; mv hcloud hack/tools/bin/hcloud

      - name: Generate metadata
        id: meta
        uses: ./.github/actions/metadata
        with:
          quay_username: ${{ secrets.QUAY_USERNAME }}
          metadata_flavor: ${{ env.metadata_flavor }}
          metadata_tags: ${{ env.metadata_tags }}

      - name: Prepull the pre-built image
        run: docker pull ${REGISTRY}/${IMAGE_NAME}:${TAG}
        env:
          TAG: ${{ steps.meta.outputs.version }}

      - name: "e2e-basic"
        env:
          CI: "true"
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          TAG: ${{ steps.meta.outputs.version }}
          E2E_CONF_FILE_SOURCE: "${{ github.workspace }}/test/e2e/config/hetzner-ci.yaml"
          MANIFEST_PATH: "../../../out"
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          SKIP_IMAGE_BUILD: "1"
        run: make test-e2e
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-basic
          path: _artifacts
